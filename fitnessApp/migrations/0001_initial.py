# Generated by Django 5.1.6 on 2025-04-19 23:10

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('video_id', models.CharField(blank=True, max_length=50)),
                ('public_flag', models.BooleanField(default=False)),
                ('mode', models.CharField(choices=[('REPS', 'Rep Based'), ('TIME', 'Time Based')], default='REPS', max_length=20)),
                ('weight_flag', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('duration', models.IntegerField(default=60)),
                ('difficulty_level', models.CharField(choices=[('BEGINNER', 'Beginner'), ('INTERMEDIATE', 'Intermediate'), ('ADVANCED', 'Advanced')], max_length=20)),
                ('target', models.CharField(choices=[('ARMS', 'Arms'), ('BACK', 'Back'), ('CARDIO', 'Cardio'), ('CHEST', 'Chest'), ('CORE', 'Core'), ('LEGS', 'Legs'), ('LOWERBODY', 'Lower Body'), ('SHOULDER', 'Shoulders'), ('SPEEDAGILITY', 'Speed Agility'), ('UPPERBODY', 'Upper Body'), ('WHOLEBODY', 'Whole Body')], max_length=20)),
                ('public_flag', models.BooleanField(default=False)),
                ('video_id', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FitnessAppUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dummy', models.CharField(blank=True, max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutCircuit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('sets', models.IntegerField(default=2)),
                ('set_rest', models.IntegerField(default=120)),
                ('exercise_rest', models.IntegerField(default=30)),
                ('workout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitnessApp.workout')),
            ],
        ),
        migrations.CreateModel(
            name='CircuitExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode_quantity', models.IntegerField(default=0)),
                ('recommended_weight', models.IntegerField(default=0, null=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitnessApp.exercise')),
                ('circuit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitnessApp.workoutcircuit')),
            ],
        ),
    ]
